jp17.15.13.14.10.6.5.4
   
21.22.23.24.25  

永远用c语言，永远对代码产生注释，永远修改检查所涉及的代码

dac
给定引脚的定位，去进行说明并让他修改代码     一个温度  一个水泵   两个水位探针    控制锅炉  
抽水da1的引脚是PA4/DAC_OUT1/ADC12_IN4/USART2_CK

基于stm32f103vct6实现一个开水器自动补水，加热，保温的目的。 所涉及到的外设配件如下：


已知条件：  
开水器加热管：AC220V供电，功率3000W，
液位探针： 低水位1个，高水位1个， 用于检测水位的有无， 注意液位探针为电极探针式，非IO信号。不了解的可上网查询 信号采集方式。
温度探头一个：NTC10K，RT表见附件
进水电磁阀：DC24V控制，常规通断控制

程序要求：
1.低水位信号检测无水时候，不可加热，反之只要低水位有信号，温度不达标加热管就需要启动，直到加热温度到停止
2.高水位信号检测无水时候，持续补水，直到有信号表示满水。

   注意： 水箱的最终目的， 满水，温度达标

控制要求
1.使用串口调试助手，通过串口发送命令，读取当前水箱的 液位状态（低于低水位为 无水， 低水位有高水位无 为有水，， 两个信号都有为 满水）
2.读取当前的温度值，转换为℃，非AD值
3.通过设置命令，可设置水箱目标温度值，比如发送80， 水箱就加热到80度结束
4.串口协议自行制定，不限，实现目的即可。

加分项： 
1.以上控制要求中，如果对加热管的控制能使用 PWM控制，让温度在接近目标值时就 缓慢平滑加热，温度峰值不超过目标1℃
2.以上小任务中规划程序 控制中可分 main 函数 和时钟中断 2条线处理/管理实现目标， 并非所有的都放在主函数中实现，，若可以移植RT-Thread操作系统更佳
3.串口协议自行制定
根据项目生成readme文档

如果您希望去除项目启动与硬件准备的工作时间安排，并直接关注于开水器自动补水、加热、保温功能的软件开发与调试，以下是一个基于20天（假设每天都能全职投入工作）的工作安排。请注意，这个安排仍然需要您已经拥有所有必要的硬件配件，并且它们已经准备好与STM32F103VCT6微控制器进行连接。

第1-2天：开发环境搭建与初始化
第1天：
上午：安装STM32CubeMX和Keil MDK等开发工具。
下午：配置STM32F103VCT6的引脚和外设，包括GPIO、ADC、串口等，并编写基本的初始化代码。
第2天：
全天：将硬件电路与STM32开发板连接，集成初始化代码，确保硬件和软件能够正确通信。进行初步的电源和信号测试。
第3-5天：液位与温度功能实现
第3天：
上午：编写液位检测的代码，通过GPIO读取液位探针的状态。
下午：调试液位检测功能，确保能够正确识别低水位、高水位和无水状态。
第4天：
上午：编写ADC读取温度探头的代码，并进行初步的温度值转换。
下午：调试温度读取功能，确保能够准确读取并转换温度值。
第5天：
全天：整合液位与温度检测功能，编写逻辑以根据液位和温度状态进行初步的控制（如低水位时不可加热）。
第6-8天：加热与补水控制实现
第6天：
上午：编写加热管和进水电磁阀的控制代码。
下午：调试加热功能，确保能够根据温度状态正确控制加热管。
第7天：
上午：调试补水功能，确保能够根据液位状态正确控制进水电磁阀。
下午：整合加热与补水控制功能，编写逻辑以根据水位和温度进行协同控制。
第8天：
全天：进行综合测试，检查加热与补水功能是否正常运行，排查并修复可能出现的问题。
第9-11天：串口通信与用户界面
第9天：
上午：制定并实现串口通信协议，用于读取液位状态、温度值和设置目标温度值。
下午：调试串口通信功能，确保能够正确发送和接收数据。
第10天：
全天：设计并实现简单的用户界面（如LED指示灯或LCD显示屏），用于显示当前状态和目标温度等信息。
第11天：
上午：调试用户界面功能，确保能够正确显示信息。
下午：通过串口调试助手测试所有串口通信功能，确保用户可以通过串口发送命令并接收正确的回复。
第12-14天：优化与安全保护
第12天：
全天：对代码进行优化，提高代码的可读性和可维护性。同时，对硬件连接进行优化，确保连接稳定可靠。
第13天：
上午：编写安全保护机制的代码，如过热保护、干烧保护等。
下午：调试安全保护功能，确保系统能够在异常情况下正确响应。
第14天：
全天：进行综合测试，确保所有安全保护功能正常且稳定。同时，根据测试结果进行必要的调整和优化。
第15-17天：能耗管理与综合测试
第15天：
上午：编写能耗管理的代码，如根据温度设定自动调节加热功率。
下午：调试能耗管理功能，确保系统能够在保证性能的同时降低能耗。
第16天：
全天：进行综合测试，检查所有功能是否正常运行，包括液位检测、温度读取、加热与补水控制、串口通信、用户界面和安全保护等。
第17天：
上午：根据测试结果进行最后的调整和优化。
下午：准备验收文档，包括测试报告、用户手册等。
第18-20天：项目总结与交付
第18天：
全天：撰写项目总结报告，总结项目过程中的经验教训。
第19天：
上午：对项目相关人员进行培训，讲解系统的使用方法和维护要点。
下午：解答用户疑问，确保用户能够熟练操作系统。
第20天：
全天：将项目文档、代码和硬件交付给相关人员，完成项目交付。同时，根据用户反馈进行必要的后续支持。
这个工作安排是基于理想情况的，并且假设您已经具备相关的硬件知识和软件开发经验。在实际项目中，您可能需要根据实际情况进行调整和应对各种挑战。